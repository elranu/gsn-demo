{
  "contractName": "WhitelistPaymaster",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FORWARDER_HUB_OVERHEAD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAYMASTER_ACCEPTANCE_BUDGET",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "POST_RELAYED_CALL_GAS_LIMIT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRE_RELAYED_CALL_GAS_LIMIT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct IForwarder.ForwardRequest",
              "name": "request",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "gasPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pctRelayFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "baseRelayFee",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "relayWorker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "paymaster",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "clientId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "forwarder",
                  "type": "address"
                }
              ],
              "internalType": "struct GsnTypes.RelayData",
              "name": "relayData",
              "type": "tuple"
            }
          ],
          "internalType": "struct GsnTypes.RelayRequest",
          "name": "relayRequest",
          "type": "tuple"
        }
      ],
      "name": "_verifyForwarder",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGasLimits",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "acceptanceBudget",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preRelayedCallGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "postRelayedCallGasLimit",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPaymaster.GasLimits",
          "name": "limits",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHubAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRelayHubDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "gasUseWithoutPost",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "gasPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pctRelayFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "baseRelayFee",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "relayWorker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "paymaster",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "paymasterData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "clientId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "internalType": "struct GsnTypes.RelayData",
          "name": "relayData",
          "type": "tuple"
        }
      ],
      "name": "postRelayedCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "senderWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IRelayHub",
          "name": "hub",
          "type": "address"
        }
      ],
      "name": "setRelayHub",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IForwarder",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "setTrustedForwarder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "targetWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "trustedForwarder",
      "outputs": [
        {
          "internalType": "contract IForwarder",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "useSenderWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "useTargetWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "versionPaymaster",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "withdrawRelayHubDepositTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "whitelistSender",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "whitelistTarget",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct IForwarder.ForwardRequest",
              "name": "request",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "gasPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pctRelayFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "baseRelayFee",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "relayWorker",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "paymaster",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "clientId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "forwarder",
                  "type": "address"
                }
              ],
              "internalType": "struct GsnTypes.RelayData",
              "name": "relayData",
              "type": "tuple"
            }
          ],
          "internalType": "struct GsnTypes.RelayRequest",
          "name": "relayRequest",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "approvalData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "maxPossibleGas",
          "type": "uint256"
        }
      ],
      "name": "preRelayedCall",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "revertOnRecipientRevert",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FORWARDER_HUB_OVERHEAD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER_ACCEPTANCE_BUDGET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POST_RELAYED_CALL_GAS_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRE_RELAYED_CALL_GAS_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"internalType\":\"struct GsnTypes.RelayRequest\",\"name\":\"relayRequest\",\"type\":\"tuple\"}],\"name\":\"_verifyForwarder\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGasLimits\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"acceptanceBudget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preRelayedCallGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postRelayedCallGasLimit\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymaster.GasLimits\",\"name\":\"limits\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHubAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRelayHubDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasUseWithoutPost\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"name\":\"postRelayedCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pctRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseRelayFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"internalType\":\"struct GsnTypes.RelayRequest\",\"name\":\"relayRequest\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"approvalData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxPossibleGas\",\"type\":\"uint256\"}],\"name\":\"preRelayedCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"revertOnRecipientRevert\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"senderWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRelayHub\",\"name\":\"hub\",\"type\":\"address\"}],\"name\":\"setRelayHub\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IForwarder\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"targetWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"contract IForwarder\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"useSenderWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"useTargetWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionPaymaster\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"whitelistSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"whitelistTarget\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"withdrawRelayHubDepositTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"getRelayHubDeposit()\":{\"notice\":\"check current deposit on relay hub.\"},\"withdrawRelayHubDepositTo(uint256,address)\":{\"notice\":\"withdraw deposit from relayHub\"}},\"notice\":\"a sample paymaster that has whitelists for senders and targets. - if at least one sender is whitelisted, then ONLY whitelisted senders are allowed. - if at least one target is whitelisted, then ONLY whitelisted targets are allowed.\"}},\"settings\":{\"compilationTarget\":{\"/C/Dev/repos/gsn-demo/contracts/WhitelistPaymaster.sol\":\"WhitelistPaymaster\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Dev/repos/gsn-demo/contracts/AcceptEverythingPaymaster.sol\":{\"keccak256\":\"0xb4aea277fc80416d959e50d2c68c84fb798251bc2d6be97b85d6235e5c07646d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34af2ff95de5e35fff21723b94a9f3be33340c4f6d0ca380c4a51bc76fa08618\",\"dweb:/ipfs/QmYZQnSuWsFn6nXtGG4DutPeDez4s7DrGZ5ZKSt4p4KuzM\"]},\"/C/Dev/repos/gsn-demo/contracts/WhitelistPaymaster.sol\":{\"keccak256\":\"0xae0349f69b6915690ab8cec85ce82186ea1625bd92d52ed4760f7e7838898afe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2e0b214afebdb697d0bb4ba7a76be192697b365db9f4b36cd063ac1e0f82a04\",\"dweb:/ipfs/QmbxWR1gV95S2QXaKu6LfhrvZ5A69yFSuCsKNdgnuBGMcm\"]},\"/C/Dev/repos/gsn-demo/contracts/lib/BasePaymaster.sol\":{\"keccak256\":\"0x3d919d37498eedbfb21ccca8570501db480dc884ab9a68e1d8d69062c8efe18d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9e02e669787213806a6012d710ae4d314f28f4dc176f45ee91eebed20800cad\",\"dweb:/ipfs/QmcNLLXT7mSD5wFzCF8KNCkSBBmeZa9NfLZe2ah195PZ7X\"]},\"/C/Dev/repos/gsn-demo/contracts/lib/forwarder/Forwarder.sol\":{\"keccak256\":\"0x10b4cbeebab696613fa4123c50db43e8ccc2da031a88638e194777cda792a3cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3872a73495ef634e8cedce8718da5e4b8b2faac9b6633cfefdc30c0f90069abc\",\"dweb:/ipfs/QmSmrciT8wkMXNeDh3dWHRe9JFULeEHNQ652WDPAZkwAVu\"]},\"/C/Dev/repos/gsn-demo/contracts/lib/forwarder/IForwarder.sol\":{\"keccak256\":\"0x253fd0f17ff0a73a96d83570b9d6bdc027b64e3ff0aca19d6c0b621bd5156aee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd3169e07849f996eb281bf4700cea430e45eda54a80169f0a360362cc2a8e84\",\"dweb:/ipfs/QmXa1x3UpA9tAa26Fwf4b4MkVqeEfEFgDPhNfRMtwJuoms\"]},\"/C/Dev/repos/gsn-demo/contracts/lib/interfaces/GsnTypes.sol\":{\"keccak256\":\"0xedcb9a8dfeed8c622844c604c5ebdb3a9fb92f859a1530b9327fb85476206062\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fba2e08a6793d60d41c49c817a8837f7fdec6706950e804f79bac0a88b9bad0\",\"dweb:/ipfs/QmPnrUNzGvshVLrSmgBN4kB2Z2NXTzCyWuegjHo15292uD\"]},\"/C/Dev/repos/gsn-demo/contracts/lib/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x29ce667767ec535da1172bebf6924f24bc254c587fd2c1954a575b3bc06d9dbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c243806f0ff756488f7212c7ee652d163b4c59e766274fbf8deb1fa5020b2a28\",\"dweb:/ipfs/QmZREaXLpsMnzYJjJhvo2T5vRXtinefqy1TwYeuHesaxY8\"]},\"/C/Dev/repos/gsn-demo/contracts/lib/interfaces/IRelayHub.sol\":{\"keccak256\":\"0xf956510ed4c9aefce94d9781e97f3a0ba800b45e49c94978387e18c1dc131dfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3113d206c4c95e879b681a9f16917ad8d236878e1443e2214a6fe686995528a4\",\"dweb:/ipfs/QmdU4obC6dphPLdAYQMeaky12dogNL6ZbjJHbQ1DzoB5mP\"]},\"/C/Dev/repos/gsn-demo/contracts/lib/interfaces/IRelayRecipient.sol\":{\"keccak256\":\"0x308879bbe0180d3794daa707b5602dc4b9298e919a0d52243f7e73ca180591b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e37e93503e49b120a1eecbd5b2372c76ca31394922565cc5ec5c69dfaef6e46d\",\"dweb:/ipfs/QmY4amJ8Dp9ufJJwXPaitQ5rPSjJo2GPSpgNukK57yQV47\"]},\"/C/Dev/repos/gsn-demo/contracts/lib/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xef5e2a00a9aa741faa94cf828dc060b05566dc87e32f2b41577e7d3a97f2cd8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99cc978b676db13da12ef5da9cc509715c3f24896b98cbac1af0f9d2d0ede554\",\"dweb:/ipfs/QmWBxE1Uxru5j26xBJ9tFzivCtdy5Fe6mZuC8mgLsmubyX\"]},\"/C/Dev/repos/gsn-demo/contracts/lib/utils/GsnEip712Library.sol\":{\"keccak256\":\"0x9c380dd0a60ee6a26fb52acdbdd0fce4c9273a33c0e06b57989264820291d863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cda18d10adb9f83c113a9184a881e34a7a5e3e7b06cf760c908b7507cac52d9f\",\"dweb:/ipfs/QmWQjHFmx2QYJzyTig6kzWPG34MQzVNqK2uibAvejuxywJ\"]},\"/C/Dev/repos/gsn-demo/contracts/lib/utils/GsnUtils.sol\":{\"keccak256\":\"0x8f13a7751fe2d62056aafcd2492bac22defb01f05aee34e6b7827db66c6578ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28710b609b3066f482cdcbedd4f14255f4363b89dc6052d8da78ecfab4ef1681\",\"dweb:/ipfs/QmU7v21Qtm1wppx16nxdoh3VMSoaK66vyFYMezMXEZ15Db\"]},\"/C/Dev/repos/gsn-demo/contracts/lib/utils/MinLibBytes.sol\":{\"keccak256\":\"0x96c2ad0c80e0db9a849d8f8c9ea865dface3b11983435fcfbd02cd05037293f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://643018a775e0d9df91ac9d28c9b5afc586f322eb14cb4cb9bcb0154a9bbf14e6\",\"dweb:/ipfs/QmPTAEP4VminSwttSwhvT2svenkLkjKsRtXiLpLAPc6ajC\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0x94c4719c16ffb96dd3cdc68f6fbf78105153018adbf382241821e8188e6a4bd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33390c907a31dd8961949b0fa1b9557781c81024231f607f6f97b203746ebf60\",\"dweb:/ipfs/QmSdRfWx8tsa2Phm23qtNGTDUek2BphzwyxuqKf3AEszL9\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060006100216100c460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100cc565b600033905090565b612109806100db6000396000f3fe60806040526004361061014f5760003560e01c80638da5cb5b116100b6578063da7422281161006f578063da74222814610585578063dd1bcaa1146105ae578063df463a66146105d9578063e5c1244614610604578063f2fde38b14610642578063f9c002f71461066b57610276565b80638da5cb5b146104875780638e9483b0146104b2578063921276ea146104db5780639ea0921114610506578063b90b41cf1461052f578063bbdaa3c91461055a57610276565b8063715018a611610108578063715018a61461037757806374e861d61461038e5780637bb05264146103b95780637da0a877146103e25780638222f07d1461040d578063858437b01461044a57610276565b80631cfda9fa1461027b5780632afe31c1146102a45780632d14c4b7146102cf5780632f10a6c6146102f85780634f28bfb9146103215780635ea54eee1461034c57610276565b3661027657600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156101e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101dd90611d59565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aa67c91934306040518363ffffffff1660e01b81526004016102429190611c56565b6000604051808303818588803b15801561025b57600080fd5b505af115801561026f573d6000803e3d6000fd5b5050505050005b600080fd5b34801561028757600080fd5b506102a2600480360381019061029d91906115b5565b610696565b005b3480156102b057600080fd5b506102b9610788565b6040516102c69190611e34565b60405180910390f35b3480156102db57600080fd5b506102f660048036038101906102f1919061180e565b61083a565b005b34801561030457600080fd5b5061031f600480360381019061031a91906115b5565b610948565b005b34801561032d57600080fd5b50610336610a3a565b6040516103439190611c71565b60405180910390f35b34801561035857600080fd5b50610361610a4d565b60405161036e9190611e19565b60405180910390f35b34801561038357600080fd5b5061038c610a82565b005b34801561039a57600080fd5b506103a3610bbd565b6040516103b09190611c3b565b60405180910390f35b3480156103c557600080fd5b506103e060048036038101906103db91906116c8565b610be7565b005b3480156103ee57600080fd5b506103f7610ca7565b6040516104049190611cbc565b60405180910390f35b34801561041957600080fd5b50610434600480360381019061042f91906115b5565b610ccd565b6040516104419190611c71565b60405180910390f35b34801561045657600080fd5b50610471600480360381019061046c91906115b5565b610ced565b60405161047e9190611c71565b60405180910390f35b34801561049357600080fd5b5061049c610d0d565b6040516104a99190611c3b565b60405180910390f35b3480156104be57600080fd5b506104d960048036038101906104d49190611607565b610d36565b005b3480156104e757600080fd5b506104f0610d3d565b6040516104fd9190611cd7565b60405180910390f35b34801561051257600080fd5b5061052d600480360381019061052891906116f1565b610d5d565b005b34801561053b57600080fd5b50610544610e1a565b6040516105519190611e34565b60405180910390f35b34801561056657600080fd5b5061056f610e20565b60405161057c9190611e34565b60405180910390f35b34801561059157600080fd5b506105ac60048036038101906105a7919061169f565b610e27565b005b3480156105ba57600080fd5b506105c3610ee7565b6040516105d09190611c71565b60405180910390f35b3480156105e557600080fd5b506105ee610efa565b6040516105fb9190611e34565b60405180910390f35b34801561061057600080fd5b5061062b60048036038101906106269190611732565b610f05565b604051610639929190611c8c565b60405180910390f35b34801561064e57600080fd5b50610669600480360381019061066491906115b5565b6110b1565b005b34801561067757600080fd5b5061068061125b565b60405161068d9190611e34565b60405180910390f35b61069e611262565b73ffffffffffffffffffffffffffffffffffffffff166106bc610d0d565b73ffffffffffffffffffffffffffffffffffffffff1614610712576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070990611dd9565b60405180910390fd5b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600260156101000a81548160ff02191690831515021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107e59190611c56565b60206040518083038186803b1580156107fd57600080fd5b505afa158015610811573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083591906117e5565b905090565b610842611262565b73ffffffffffffffffffffffffffffffffffffffff16610860610d0d565b73ffffffffffffffffffffffffffffffffffffffff16146108b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ad90611dd9565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662f714ce83836040518363ffffffff1660e01b8152600401610912929190611e4f565b600060405180830381600087803b15801561092c57600080fd5b505af1158015610940573d6000803e3d6000fd5b505050505050565b610950611262565b73ffffffffffffffffffffffffffffffffffffffff1661096e610d0d565b73ffffffffffffffffffffffffffffffffffffffff16146109c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bb90611dd9565b60405180910390fd5b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600260146101000a81548160ff02191690831515021790555050565b600260159054906101000a900460ff1681565b610a5561146b565b604051806060016040528061c350620186a0018152602001620186a081526020016201adb0815250905090565b610a8a611262565b73ffffffffffffffffffffffffffffffffffffffff16610aa8610d0d565b73ffffffffffffffffffffffffffffffffffffffff1614610afe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af590611dd9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610bef611262565b73ffffffffffffffffffffffffffffffffffffffff16610c0d610d0d565b73ffffffffffffffffffffffffffffffffffffffff1614610c63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5a90611dd9565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915054906101000a900460ff1681565b60046020528060005260406000206000915054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5050505050565b60606040518060600160405280602981526020016120ab60299139905090565b808060200190610d6d9190611e9c565b60e0016020810190610d7f91906115b5565b73ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0590611d79565b60405180910390fd5b610e178161126a565b50565b61c35081565b6201adb081565b610e2f611262565b73ffffffffffffffffffffffffffffffffffffffff16610e4d610d0d565b73ffffffffffffffffffffffffffffffffffffffff1614610ea3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9a90611dd9565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260149054906101000a900460ff1681565b61c350620186a00181565b60606000600260149054906101000a900460ff1615610fcc5760036000898060000190610f329190611e78565b6000016020810190610f4491906115b5565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610fcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc290611df9565b60405180910390fd5b5b600260159054906101000a900460ff161561108f5760046000898060000190610ff59190611e78565b602001602081019061100791906115b5565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661108e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108590611cf9565b60405180910390fd5b5b6000604051806020016040528060008152509091509150965096945050505050565b6110b9611262565b73ffffffffffffffffffffffffffffffffffffffff166110d7610d0d565b73ffffffffffffffffffffffffffffffffffffffff161461112d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112490611dd9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561119d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490611d39565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b620186a081565b600033905090565b6000606082806000019061127e9190611e78565b602001602081019061129091906115b5565b73ffffffffffffffffffffffffffffffffffffffff1663572b6c0560e01b8480602001906112be9190611e9c565b60e00160208101906112d091906115b5565b6040516024016112e09190611c3b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161134a9190611c24565b600060405180830381855afa9150503d8060008114611385576040519150601f19603f3d011682016040523d82523d6000602084013e61138a565b606091505b5091509150816113cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c690611db9565b60405180910390fd5b6020815114611413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140a90611d99565b60405180910390fd5b8080602001905181019061142791906115de565b611466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145d90611d19565b60405180910390fd5b505050565b60405180606001604052806000815260200160008152602001600081525090565b60008135905061149b81612020565b92915050565b6000813590506114b081612037565b92915050565b6000813590506114c58161204e565b92915050565b6000815190506114da8161204e565b92915050565b60008083601f8401126114f257600080fd5b8235905067ffffffffffffffff81111561150b57600080fd5b60208301915083600182028301111561152357600080fd5b9250929050565b60008135905061153981612065565b92915050565b60008135905061154e8161207c565b92915050565b6000610100828403121561156757600080fd5b81905092915050565b60006040828403121561158257600080fd5b81905092915050565b60008135905061159a81612093565b92915050565b6000815190506115af81612093565b92915050565b6000602082840312156115c757600080fd5b60006115d58482850161148c565b91505092915050565b6000602082840312156115f057600080fd5b60006115fe848285016114cb565b91505092915050565b60008060008060006080868803121561161f57600080fd5b600086013567ffffffffffffffff81111561163957600080fd5b611645888289016114e0565b95509550506020611658888289016114b6565b93505060406116698882890161158b565b925050606086013567ffffffffffffffff81111561168657600080fd5b61169288828901611554565b9150509295509295909350565b6000602082840312156116b157600080fd5b60006116bf8482850161152a565b91505092915050565b6000602082840312156116da57600080fd5b60006116e88482850161153f565b91505092915050565b60006020828403121561170357600080fd5b600082013567ffffffffffffffff81111561171d57600080fd5b61172984828501611570565b91505092915050565b6000806000806000806080878903121561174b57600080fd5b600087013567ffffffffffffffff81111561176557600080fd5b61177189828a01611570565b965050602087013567ffffffffffffffff81111561178e57600080fd5b61179a89828a016114e0565b9550955050604087013567ffffffffffffffff8111156117b957600080fd5b6117c589828a016114e0565b935093505060606117d889828a0161158b565b9150509295509295509295565b6000602082840312156117f757600080fd5b6000611805848285016115a0565b91505092915050565b6000806040838503121561182157600080fd5b600061182f8582860161158b565b9250506020611840858286016114a1565b9150509250929050565b61185381611f82565b82525050565b61186281611f16565b82525050565b61187181611f04565b82525050565b61188081611f28565b82525050565b600061189182611ec1565b61189b8185611ed7565b93506118ab818560208601611fdc565b6118b48161200f565b840191505092915050565b60006118ca82611ec1565b6118d48185611ee8565b93506118e4818560208601611fdc565b80840191505092915050565b6118f981611f94565b82525050565b600061190a82611ecc565b6119148185611ef3565b9350611924818560208601611fdc565b61192d8161200f565b840191505092915050565b6000611945601683611ef3565b91507f746172676574206e6f742077686974656c6973746564000000000000000000006000830152602082019050919050565b6000611985601f83611ef3565b91507f696e76616c696420666f7277617264657220666f7220726563697069656e74006000830152602082019050919050565b60006119c5602683611ef3565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611a2b601983611ef3565b91507f72656c6179206875622061646472657373206e6f7420736574000000000000006000830152602082019050919050565b6000611a6b601883611ef3565b91507f466f72776172646572206973206e6f74207472757374656400000000000000006000830152602082019050919050565b6000611aab602c83611ef3565b91507f697354727573746564466f727761726465722072657475726e656420696e766160008301527f6c696420726573706f6e736500000000000000000000000000000000000000006020830152604082019050919050565b6000611b11601b83611ef3565b91507f697354727573746564466f7277617264657220726576657274656400000000006000830152602082019050919050565b6000611b51602083611ef3565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000611b91601683611ef3565b91507f73656e646572206e6f742077686974656c6973746564000000000000000000006000830152602082019050919050565b606082016000820151611bda6000850182611c06565b506020820151611bed6020850182611c06565b506040820151611c006040850182611c06565b50505050565b611c0f81611f78565b82525050565b611c1e81611f78565b82525050565b6000611c3082846118bf565b915081905092915050565b6000602082019050611c506000830184611868565b92915050565b6000602082019050611c6b600083018461184a565b92915050565b6000602082019050611c866000830184611877565b92915050565b60006040820190508181036000830152611ca68185611886565b9050611cb56020830184611877565b9392505050565b6000602082019050611cd160008301846118f0565b92915050565b60006020820190508181036000830152611cf181846118ff565b905092915050565b60006020820190508181036000830152611d1281611938565b9050919050565b60006020820190508181036000830152611d3281611978565b9050919050565b60006020820190508181036000830152611d52816119b8565b9050919050565b60006020820190508181036000830152611d7281611a1e565b9050919050565b60006020820190508181036000830152611d9281611a5e565b9050919050565b60006020820190508181036000830152611db281611a9e565b9050919050565b60006020820190508181036000830152611dd281611b04565b9050919050565b60006020820190508181036000830152611df281611b44565b9050919050565b60006020820190508181036000830152611e1281611b84565b9050919050565b6000606082019050611e2e6000830184611bc4565b92915050565b6000602082019050611e496000830184611c15565b92915050565b6000604082019050611e646000830185611c15565b611e716020830184611859565b9392505050565b60008235600160c003833603038112611e9057600080fd5b80830191505092915050565b60008235600161010003833603038112611eb557600080fd5b80830191505092915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000611f0f82611f58565b9050919050565b6000611f2182611f58565b9050919050565b60008115159050919050565b6000611f3f82611f04565b9050919050565b6000611f5182611f04565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611f8d82611fb8565b9050919050565b6000611f9f82611fa6565b9050919050565b6000611fb182611f58565b9050919050565b6000611fc382611fca565b9050919050565b6000611fd582611f58565b9050919050565b60005b83811015611ffa578082015181840152602081019050611fdf565b83811115612009576000848401525b50505050565b6000601f19601f8301169050919050565b61202981611f04565b811461203457600080fd5b50565b61204081611f16565b811461204b57600080fd5b50565b61205781611f28565b811461206257600080fd5b50565b61206e81611f34565b811461207957600080fd5b50565b61208581611f46565b811461209057600080fd5b50565b61209c81611f78565b81146120a757600080fd5b5056fe322e302e302b6f70656e67736e2e61636365707465766572797468696e672e697061796d6173746572a2646970667358221220058a9bc67066007f5a5b67e50d018fb68fba3ff091641e8609b3af38d187daa364736f6c634300060a0033",
  "deployedBytecode": "0x60806040526004361061014f5760003560e01c80638da5cb5b116100b6578063da7422281161006f578063da74222814610585578063dd1bcaa1146105ae578063df463a66146105d9578063e5c1244614610604578063f2fde38b14610642578063f9c002f71461066b57610276565b80638da5cb5b146104875780638e9483b0146104b2578063921276ea146104db5780639ea0921114610506578063b90b41cf1461052f578063bbdaa3c91461055a57610276565b8063715018a611610108578063715018a61461037757806374e861d61461038e5780637bb05264146103b95780637da0a877146103e25780638222f07d1461040d578063858437b01461044a57610276565b80631cfda9fa1461027b5780632afe31c1146102a45780632d14c4b7146102cf5780632f10a6c6146102f85780634f28bfb9146103215780635ea54eee1461034c57610276565b3661027657600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156101e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101dd90611d59565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aa67c91934306040518363ffffffff1660e01b81526004016102429190611c56565b6000604051808303818588803b15801561025b57600080fd5b505af115801561026f573d6000803e3d6000fd5b5050505050005b600080fd5b34801561028757600080fd5b506102a2600480360381019061029d91906115b5565b610696565b005b3480156102b057600080fd5b506102b9610788565b6040516102c69190611e34565b60405180910390f35b3480156102db57600080fd5b506102f660048036038101906102f1919061180e565b61083a565b005b34801561030457600080fd5b5061031f600480360381019061031a91906115b5565b610948565b005b34801561032d57600080fd5b50610336610a3a565b6040516103439190611c71565b60405180910390f35b34801561035857600080fd5b50610361610a4d565b60405161036e9190611e19565b60405180910390f35b34801561038357600080fd5b5061038c610a82565b005b34801561039a57600080fd5b506103a3610bbd565b6040516103b09190611c3b565b60405180910390f35b3480156103c557600080fd5b506103e060048036038101906103db91906116c8565b610be7565b005b3480156103ee57600080fd5b506103f7610ca7565b6040516104049190611cbc565b60405180910390f35b34801561041957600080fd5b50610434600480360381019061042f91906115b5565b610ccd565b6040516104419190611c71565b60405180910390f35b34801561045657600080fd5b50610471600480360381019061046c91906115b5565b610ced565b60405161047e9190611c71565b60405180910390f35b34801561049357600080fd5b5061049c610d0d565b6040516104a99190611c3b565b60405180910390f35b3480156104be57600080fd5b506104d960048036038101906104d49190611607565b610d36565b005b3480156104e757600080fd5b506104f0610d3d565b6040516104fd9190611cd7565b60405180910390f35b34801561051257600080fd5b5061052d600480360381019061052891906116f1565b610d5d565b005b34801561053b57600080fd5b50610544610e1a565b6040516105519190611e34565b60405180910390f35b34801561056657600080fd5b5061056f610e20565b60405161057c9190611e34565b60405180910390f35b34801561059157600080fd5b506105ac60048036038101906105a7919061169f565b610e27565b005b3480156105ba57600080fd5b506105c3610ee7565b6040516105d09190611c71565b60405180910390f35b3480156105e557600080fd5b506105ee610efa565b6040516105fb9190611e34565b60405180910390f35b34801561061057600080fd5b5061062b60048036038101906106269190611732565b610f05565b604051610639929190611c8c565b60405180910390f35b34801561064e57600080fd5b50610669600480360381019061066491906115b5565b6110b1565b005b34801561067757600080fd5b5061068061125b565b60405161068d9190611e34565b60405180910390f35b61069e611262565b73ffffffffffffffffffffffffffffffffffffffff166106bc610d0d565b73ffffffffffffffffffffffffffffffffffffffff1614610712576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070990611dd9565b60405180910390fd5b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600260156101000a81548160ff02191690831515021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107e59190611c56565b60206040518083038186803b1580156107fd57600080fd5b505afa158015610811573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083591906117e5565b905090565b610842611262565b73ffffffffffffffffffffffffffffffffffffffff16610860610d0d565b73ffffffffffffffffffffffffffffffffffffffff16146108b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ad90611dd9565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662f714ce83836040518363ffffffff1660e01b8152600401610912929190611e4f565b600060405180830381600087803b15801561092c57600080fd5b505af1158015610940573d6000803e3d6000fd5b505050505050565b610950611262565b73ffffffffffffffffffffffffffffffffffffffff1661096e610d0d565b73ffffffffffffffffffffffffffffffffffffffff16146109c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bb90611dd9565b60405180910390fd5b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600260146101000a81548160ff02191690831515021790555050565b600260159054906101000a900460ff1681565b610a5561146b565b604051806060016040528061c350620186a0018152602001620186a081526020016201adb0815250905090565b610a8a611262565b73ffffffffffffffffffffffffffffffffffffffff16610aa8610d0d565b73ffffffffffffffffffffffffffffffffffffffff1614610afe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af590611dd9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610bef611262565b73ffffffffffffffffffffffffffffffffffffffff16610c0d610d0d565b73ffffffffffffffffffffffffffffffffffffffff1614610c63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5a90611dd9565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915054906101000a900460ff1681565b60046020528060005260406000206000915054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5050505050565b60606040518060600160405280602981526020016120ab60299139905090565b808060200190610d6d9190611e9c565b60e0016020810190610d7f91906115b5565b73ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0590611d79565b60405180910390fd5b610e178161126a565b50565b61c35081565b6201adb081565b610e2f611262565b73ffffffffffffffffffffffffffffffffffffffff16610e4d610d0d565b73ffffffffffffffffffffffffffffffffffffffff1614610ea3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9a90611dd9565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260149054906101000a900460ff1681565b61c350620186a00181565b60606000600260149054906101000a900460ff1615610fcc5760036000898060000190610f329190611e78565b6000016020810190610f4491906115b5565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610fcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc290611df9565b60405180910390fd5b5b600260159054906101000a900460ff161561108f5760046000898060000190610ff59190611e78565b602001602081019061100791906115b5565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661108e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108590611cf9565b60405180910390fd5b5b6000604051806020016040528060008152509091509150965096945050505050565b6110b9611262565b73ffffffffffffffffffffffffffffffffffffffff166110d7610d0d565b73ffffffffffffffffffffffffffffffffffffffff161461112d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112490611dd9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561119d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490611d39565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b620186a081565b600033905090565b6000606082806000019061127e9190611e78565b602001602081019061129091906115b5565b73ffffffffffffffffffffffffffffffffffffffff1663572b6c0560e01b8480602001906112be9190611e9c565b60e00160208101906112d091906115b5565b6040516024016112e09190611c3b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161134a9190611c24565b600060405180830381855afa9150503d8060008114611385576040519150601f19603f3d011682016040523d82523d6000602084013e61138a565b606091505b5091509150816113cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c690611db9565b60405180910390fd5b6020815114611413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140a90611d99565b60405180910390fd5b8080602001905181019061142791906115de565b611466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145d90611d19565b60405180910390fd5b505050565b60405180606001604052806000815260200160008152602001600081525090565b60008135905061149b81612020565b92915050565b6000813590506114b081612037565b92915050565b6000813590506114c58161204e565b92915050565b6000815190506114da8161204e565b92915050565b60008083601f8401126114f257600080fd5b8235905067ffffffffffffffff81111561150b57600080fd5b60208301915083600182028301111561152357600080fd5b9250929050565b60008135905061153981612065565b92915050565b60008135905061154e8161207c565b92915050565b6000610100828403121561156757600080fd5b81905092915050565b60006040828403121561158257600080fd5b81905092915050565b60008135905061159a81612093565b92915050565b6000815190506115af81612093565b92915050565b6000602082840312156115c757600080fd5b60006115d58482850161148c565b91505092915050565b6000602082840312156115f057600080fd5b60006115fe848285016114cb565b91505092915050565b60008060008060006080868803121561161f57600080fd5b600086013567ffffffffffffffff81111561163957600080fd5b611645888289016114e0565b95509550506020611658888289016114b6565b93505060406116698882890161158b565b925050606086013567ffffffffffffffff81111561168657600080fd5b61169288828901611554565b9150509295509295909350565b6000602082840312156116b157600080fd5b60006116bf8482850161152a565b91505092915050565b6000602082840312156116da57600080fd5b60006116e88482850161153f565b91505092915050565b60006020828403121561170357600080fd5b600082013567ffffffffffffffff81111561171d57600080fd5b61172984828501611570565b91505092915050565b6000806000806000806080878903121561174b57600080fd5b600087013567ffffffffffffffff81111561176557600080fd5b61177189828a01611570565b965050602087013567ffffffffffffffff81111561178e57600080fd5b61179a89828a016114e0565b9550955050604087013567ffffffffffffffff8111156117b957600080fd5b6117c589828a016114e0565b935093505060606117d889828a0161158b565b9150509295509295509295565b6000602082840312156117f757600080fd5b6000611805848285016115a0565b91505092915050565b6000806040838503121561182157600080fd5b600061182f8582860161158b565b9250506020611840858286016114a1565b9150509250929050565b61185381611f82565b82525050565b61186281611f16565b82525050565b61187181611f04565b82525050565b61188081611f28565b82525050565b600061189182611ec1565b61189b8185611ed7565b93506118ab818560208601611fdc565b6118b48161200f565b840191505092915050565b60006118ca82611ec1565b6118d48185611ee8565b93506118e4818560208601611fdc565b80840191505092915050565b6118f981611f94565b82525050565b600061190a82611ecc565b6119148185611ef3565b9350611924818560208601611fdc565b61192d8161200f565b840191505092915050565b6000611945601683611ef3565b91507f746172676574206e6f742077686974656c6973746564000000000000000000006000830152602082019050919050565b6000611985601f83611ef3565b91507f696e76616c696420666f7277617264657220666f7220726563697069656e74006000830152602082019050919050565b60006119c5602683611ef3565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611a2b601983611ef3565b91507f72656c6179206875622061646472657373206e6f7420736574000000000000006000830152602082019050919050565b6000611a6b601883611ef3565b91507f466f72776172646572206973206e6f74207472757374656400000000000000006000830152602082019050919050565b6000611aab602c83611ef3565b91507f697354727573746564466f727761726465722072657475726e656420696e766160008301527f6c696420726573706f6e736500000000000000000000000000000000000000006020830152604082019050919050565b6000611b11601b83611ef3565b91507f697354727573746564466f7277617264657220726576657274656400000000006000830152602082019050919050565b6000611b51602083611ef3565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000611b91601683611ef3565b91507f73656e646572206e6f742077686974656c6973746564000000000000000000006000830152602082019050919050565b606082016000820151611bda6000850182611c06565b506020820151611bed6020850182611c06565b506040820151611c006040850182611c06565b50505050565b611c0f81611f78565b82525050565b611c1e81611f78565b82525050565b6000611c3082846118bf565b915081905092915050565b6000602082019050611c506000830184611868565b92915050565b6000602082019050611c6b600083018461184a565b92915050565b6000602082019050611c866000830184611877565b92915050565b60006040820190508181036000830152611ca68185611886565b9050611cb56020830184611877565b9392505050565b6000602082019050611cd160008301846118f0565b92915050565b60006020820190508181036000830152611cf181846118ff565b905092915050565b60006020820190508181036000830152611d1281611938565b9050919050565b60006020820190508181036000830152611d3281611978565b9050919050565b60006020820190508181036000830152611d52816119b8565b9050919050565b60006020820190508181036000830152611d7281611a1e565b9050919050565b60006020820190508181036000830152611d9281611a5e565b9050919050565b60006020820190508181036000830152611db281611a9e565b9050919050565b60006020820190508181036000830152611dd281611b04565b9050919050565b60006020820190508181036000830152611df281611b44565b9050919050565b60006020820190508181036000830152611e1281611b84565b9050919050565b6000606082019050611e2e6000830184611bc4565b92915050565b6000602082019050611e496000830184611c15565b92915050565b6000604082019050611e646000830185611c15565b611e716020830184611859565b9392505050565b60008235600160c003833603038112611e9057600080fd5b80830191505092915050565b60008235600161010003833603038112611eb557600080fd5b80830191505092915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000611f0f82611f58565b9050919050565b6000611f2182611f58565b9050919050565b60008115159050919050565b6000611f3f82611f04565b9050919050565b6000611f5182611f04565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611f8d82611fb8565b9050919050565b6000611f9f82611fa6565b9050919050565b6000611fb182611f58565b9050919050565b6000611fc382611fca565b9050919050565b6000611fd582611f58565b9050919050565b60005b83811015611ffa578082015181840152602081019050611fdf565b83811115612009576000848401525b50505050565b6000601f19601f8301169050919050565b61202981611f04565b811461203457600080fd5b50565b61204081611f16565b811461204b57600080fd5b50565b61205781611f28565b811461206257600080fd5b50565b61206e81611f34565b811461207957600080fd5b50565b61208581611f46565b811461209057600080fd5b50565b61209c81611f78565b81146120a757600080fd5b5056fe322e302e302b6f70656e67736e2e61636365707465766572797468696e672e697061796d6173746572a2646970667358221220058a9bc67066007f5a5b67e50d018fb68fba3ff091641e8609b3af38d187daa364736f6c634300060a0033",
  "immutableReferences": {},
  "sourceMap": "386:1230:4:-:0;;;;;;;;;;;;;884:17:29;904:12;:10;;;:12;;:::i;:::-;884:32;;935:9;926:6;;:18;;;;;;;;;;;;;;;;;;992:9;959:43;;988:1;959:43;;;;;;;;;;;;850:159;386:1230:4;;598:104:32;651:15;685:10;678:17;;598:104;:::o;386:1230:4:-;;;;;;;",
  "deployedSourceMap": "386:1230:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2827:1:5;2798:31;;2806:8;;;;;;;;;;;2798:31;;;;2790:69;;;;;;;;;;;;;;;;;;;;;;2869:8;;;;;;;;;;;:19;;;2895:9;2914:4;2869:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;386:1230:4;;;;;781:141;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2423:139:5;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2972;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;634:141:4;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;489:30;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1160:308:5;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1717:145:29;;;;;;;;;;;;;:::i;:::-;;621:102:5;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2170:84;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;571:43;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;526:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;579;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1085:85:29;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;947:265:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;379:151;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1633:273:5;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;794:54;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;982:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2260:113;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;452:30:4;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1048:105:5;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;930:683:4;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2011:240:29;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;917:59:5;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;781:141:4;1308:12:29;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;874:4:4::1;850:15;:23;866:6;850:23;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;910:4;889:18;;:25;;;;;;;;;;;;;;;;;;781:141:::0;:::o;2423:139:5:-;2499:4;2522:8;;;;;;;;;;;:18;;;2549:4;2522:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2515:40;;2423:139;:::o;2972:::-;1308:12:29;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;3071:8:5::1;;;;;;;;;;;:17;;;3089:6;3097;3071:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2972:139:::0;;:::o;634:141:4:-;1308:12:29;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;727:4:4::1;703:15;:23;719:6;703:23;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;763:4;742:18;;:25;;;;;;;;;;;;;;;;;;634:141:::0;:::o;489:30::-;;;;;;;;;;;;;:::o;1160:308:5:-;1251:34;;:::i;:::-;1309:152;;;;;;;;843:5;970:6;1102:51;1309:152;;;;970:6;1309:152;;;;1036:6;1309:152;;;1302:159;;1160:308;:::o;1717:145:29:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;1823:1:::1;1786:40;;1807:6;::::0;::::1;;;;;;;;;1786:40;;;;;;;;;;;;1853:1;1836:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1717:145::o:0;621:102:5:-;673:7;707:8;;;;;;;;;;;692:24;;621:102;:::o;2170:84::-;1308:12:29;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;2244:3:5::1;2233:8;;:14;;;;;;;;;;;;;;;;;;2170:84:::0;:::o;571:43::-;;;;;;;;;;;;;:::o;526:46:4:-;;;;;;;;;;;;;;;;;;;;;;:::o;579:::-;;;;;;;;;;;;;;;;;;;;;;:::o;1085:85:29:-;1131:7;1157:6;;;;;;;;;;;1150:13;;1085:85;:::o;947:265:0:-;;;;;;:::o;379:151::-;447:13;472:50;;;;;;;;;;;;;;;;;;;379:151;:::o;1633:273:5:-;1775:12;:22;;;;;;;;;;:32;;;;;;;;;;;;1746:61;;1754:16;;;;;;;;;;;1746:61;;;1738:98;;;;;;;;;;;;;;;;;;;;;;1846:53;1886:12;1846:39;:53::i;:::-;1633:273;:::o;794:54::-;843:5;794:54;:::o;982:60::-;1036:6;982:60;:::o;2260:113::-;1308:12:29;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;2357:9:5::1;2338:16;;:28;;;;;;;;;;;;;;;;;;2260:113:::0;:::o;452:30:4:-;;;;;;;;;;;;;:::o;1048:105:5:-;843:5;970:6;1102:51;1048:105;:::o;930:683:4:-;1176:20;1198:28;1312:18;;;;;;;;;;;1307:131;;;1357:15;:42;1373:12;:20;;;;;;;;;;:25;;;;;;;;;;;;1357:42;;;;;;;;;;;;;;;;;;;;;;;;;1348:78;;;;;;;;;;;;;;;;;;;;;;1307:131;1453:18;;;;;;;;;;;1448:129;;;1498:15;:40;1514:12;:20;;;;;;;;;;:23;;;;;;;;;;;;1498:40;;;;;;;;;;;;;;;;;;;;;;;;;1489:76;;;;;;;;;;;;;;;;;;;;;;1448:129;1599:5;1587:18;;;;;;;;;;;;;;;;;930:683;;;;;;;;;:::o;2011:240:29:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;2119:1:::1;2099:22;;:8;:22;;;;2091:73;;;;;;;;;;;;;;;;;;;;;;2208:8;2179:38;;2200:6;::::0;::::1;;;;;;;;;2179:38;;;;;;;;;;;;2236:8;2227:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2011:240:::0;:::o;917:59:5:-;970:6;917:59;:::o;598:104:32:-;651:15;685:10;678:17;;598:104;:::o;2339:549:24:-;2441:12;2455:16;2475:12;:20;;;;;;;;;;:23;;;;;;;;;;;;:34;;2563:43;;;2608:12;:22;;;;;;;;;;:32;;;;;;;;;;;;2523:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2475:189;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2440:224;;;;2682:7;2674:47;;;;;;;;;;;;;;;;;;;;;;2753:2;2739:3;:10;:16;2731:73;;;;;;;;;;;;;;;;;;;;;;2833:3;2822:23;;;;;;;;;;;;;;2814:67;;;;;;;;;;;;;;;;;;;;;;2339:549;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:146;;230:6;217:20;208:29;;242:41;277:5;242:41;;;202:86;;;;;295:124;;372:6;359:20;350:29;;384:30;408:5;384:30;;;344:75;;;;;426:128;;507:6;501:13;492:22;;519:30;543:5;519:30;;;486:68;;;;;575:336;;;689:3;682:4;674:6;670:17;666:27;656:2;;707:1;704;697:12;656:2;740:6;727:20;717:30;;767:18;759:6;756:30;753:2;;;799:1;796;789:12;753:2;833:4;825:6;821:17;809:29;;884:3;876:4;868:6;864:17;854:8;850:32;847:41;844:2;;;901:1;898;891:12;844:2;649:262;;;;;;919:168;;1018:6;1005:20;996:29;;1030:52;1076:5;1030:52;;;990:97;;;;;1094:166;;1192:6;1179:20;1170:29;;1204:51;1249:5;1204:51;;;1164:96;;;;;1301:161;;1414:3;1405:6;1400:3;1396:16;1392:26;1389:2;;;1431:1;1428;1421:12;1389:2;1450:6;1441:15;;1382:80;;;;;1506:163;;1622:2;1613:6;1608:3;1604:16;1600:25;1597:2;;;1638:1;1635;1628:12;1597:2;1657:6;1648:15;;1590:79;;;;;1676:130;;1756:6;1743:20;1734:29;;1768:33;1795:5;1768:33;;;1728:78;;;;;1813:134;;1897:6;1891:13;1882:22;;1909:33;1936:5;1909:33;;;1876:71;;;;;1954:241;;2058:2;2046:9;2037:7;2033:23;2029:32;2026:2;;;2074:1;2071;2064:12;2026:2;2109:1;2126:53;2171:7;2162:6;2151:9;2147:22;2126:53;;;2116:63;;2088:97;2020:175;;;;;2202:257;;2314:2;2302:9;2293:7;2289:23;2285:32;2282:2;;;2330:1;2327;2320:12;2282:2;2365:1;2382:61;2435:7;2426:6;2415:9;2411:22;2382:61;;;2372:71;;2344:105;2276:183;;;;;2466:879;;;;;;2666:3;2654:9;2645:7;2641:23;2637:33;2634:2;;;2683:1;2680;2673:12;2634:2;2746:1;2735:9;2731:17;2718:31;2769:18;2761:6;2758:30;2755:2;;;2801:1;2798;2791:12;2755:2;2829:64;2885:7;2876:6;2865:9;2861:22;2829:64;;;2819:74;;;;2697:202;2930:2;2948:50;2990:7;2981:6;2970:9;2966:22;2948:50;;;2938:60;;2909:95;3035:2;3053:53;3098:7;3089:6;3078:9;3074:22;3053:53;;;3043:63;;3014:98;3171:2;3160:9;3156:18;3143:32;3195:18;3187:6;3184:30;3181:2;;;3227:1;3224;3217:12;3181:2;3247:82;3321:7;3312:6;3301:9;3297:22;3247:82;;;3237:92;;3122:213;2628:717;;;;;;;;;3352:279;;3475:2;3463:9;3454:7;3450:23;3446:32;3443:2;;;3491:1;3488;3481:12;3443:2;3526:1;3543:72;3607:7;3598:6;3587:9;3583:22;3543:72;;;3533:82;;3505:116;3437:194;;;;;3638:277;;3760:2;3748:9;3739:7;3735:23;3731:32;3728:2;;;3776:1;3773;3766:12;3728:2;3811:1;3828:71;3891:7;3882:6;3871:9;3867:22;3828:71;;;3818:81;;3790:115;3722:193;;;;;3922:391;;4058:2;4046:9;4037:7;4033:23;4029:32;4026:2;;;4074:1;4071;4064:12;4026:2;4137:1;4126:9;4122:17;4109:31;4160:18;4152:6;4149:30;4146:2;;;4192:1;4189;4182:12;4146:2;4212:85;4289:7;4280:6;4269:9;4265:22;4212:85;;;4202:95;;4088:215;4020:293;;;;;4320:1015;;;;;;;4545:3;4533:9;4524:7;4520:23;4516:33;4513:2;;;4562:1;4559;4552:12;4513:2;4625:1;4614:9;4610:17;4597:31;4648:18;4640:6;4637:30;4634:2;;;4680:1;4677;4670:12;4634:2;4700:85;4777:7;4768:6;4757:9;4753:22;4700:85;;;4690:95;;4576:215;4850:2;4839:9;4835:18;4822:32;4874:18;4866:6;4863:30;4860:2;;;4906:1;4903;4896:12;4860:2;4934:64;4990:7;4981:6;4970:9;4966:22;4934:64;;;4924:74;;;;4801:203;5063:2;5052:9;5048:18;5035:32;5087:18;5079:6;5076:30;5073:2;;;5119:1;5116;5109:12;5073:2;5147:64;5203:7;5194:6;5183:9;5179:22;5147:64;;;5137:74;;;;5014:203;5248:2;5266:53;5311:7;5302:6;5291:9;5287:22;5266:53;;;5256:63;;5227:98;4507:828;;;;;;;;;5342:263;;5457:2;5445:9;5436:7;5432:23;5428:32;5425:2;;;5473:1;5470;5463:12;5425:2;5508:1;5525:64;5581:7;5572:6;5561:9;5557:22;5525:64;;;5515:74;;5487:108;5419:186;;;;;5612:382;;;5741:2;5729:9;5720:7;5716:23;5712:32;5709:2;;;5757:1;5754;5747:12;5709:2;5792:1;5809:53;5854:7;5845:6;5834:9;5830:22;5809:53;;;5799:63;;5771:97;5899:2;5917:61;5970:7;5961:6;5950:9;5946:22;5917:61;;;5907:71;;5878:106;5703:291;;;;;;6001:142;6092:45;6131:5;6092:45;;;6087:3;6080:58;6074:69;;;6150:137;6249:32;6275:5;6249:32;;;6244:3;6237:45;6231:56;;;6294:113;6377:24;6395:5;6377:24;;;6372:3;6365:37;6359:48;;;6414:104;6491:21;6506:5;6491:21;;;6486:3;6479:34;6473:45;;;6525:343;;6635:38;6667:5;6635:38;;;6685:70;6748:6;6743:3;6685:70;;;6678:77;;6760:52;6805:6;6800:3;6793:4;6786:5;6782:16;6760:52;;;6833:29;6855:6;6833:29;;;6828:3;6824:39;6817:46;;6615:253;;;;;;6875:356;;7003:38;7035:5;7003:38;;;7053:88;7134:6;7129:3;7053:88;;;7046:95;;7146:52;7191:6;7186:3;7179:4;7172:5;7168:16;7146:52;;;7219:6;7214:3;7210:16;7203:23;;6983:248;;;;;;7238:164;7340:56;7390:5;7340:56;;;7335:3;7328:69;7322:80;;;7409:347;;7521:39;7554:5;7521:39;;;7572:71;7636:6;7631:3;7572:71;;;7565:78;;7648:52;7693:6;7688:3;7681:4;7674:5;7670:16;7648:52;;;7721:29;7743:6;7721:29;;;7716:3;7712:39;7705:46;;7501:255;;;;;;7764:322;;7924:67;7988:2;7983:3;7924:67;;;7917:74;;8024:24;8020:1;8015:3;8011:11;8004:45;8077:2;8072:3;8068:12;8061:19;;7910:176;;;;8095:331;;8255:67;8319:2;8314:3;8255:67;;;8248:74;;8355:33;8351:1;8346:3;8342:11;8335:54;8417:2;8412:3;8408:12;8401:19;;8241:185;;;;8435:375;;8595:67;8659:2;8654:3;8595:67;;;8588:74;;8695:34;8691:1;8686:3;8682:11;8675:55;8764:8;8759:2;8754:3;8750:12;8743:30;8801:2;8796:3;8792:12;8785:19;;8581:229;;;;8819:325;;8979:67;9043:2;9038:3;8979:67;;;8972:74;;9079:27;9075:1;9070:3;9066:11;9059:48;9135:2;9130:3;9126:12;9119:19;;8965:179;;;;9153:324;;9313:67;9377:2;9372:3;9313:67;;;9306:74;;9413:26;9409:1;9404:3;9400:11;9393:47;9468:2;9463:3;9459:12;9452:19;;9299:178;;;;9486:381;;9646:67;9710:2;9705:3;9646:67;;;9639:74;;9746:34;9742:1;9737:3;9733:11;9726:55;9815:14;9810:2;9805:3;9801:12;9794:36;9858:2;9853:3;9849:12;9842:19;;9632:235;;;;9876:327;;10036:67;10100:2;10095:3;10036:67;;;10029:74;;10136:29;10132:1;10127:3;10123:11;10116:50;10194:2;10189:3;10185:12;10178:19;;10022:181;;;;10212:332;;10372:67;10436:2;10431:3;10372:67;;;10365:74;;10472:34;10468:1;10463:3;10459:11;10452:55;10535:2;10530:3;10526:12;10519:19;;10358:186;;;;10553:322;;10713:67;10777:2;10772:3;10713:67;;;10706:74;;10813:24;10809:1;10804:3;10800:11;10793:45;10866:2;10861:3;10857:12;10850:19;;10699:176;;;;10948:683;11095:4;11090:3;11086:14;11190:4;11183:5;11179:16;11173:23;11202:63;11259:4;11254:3;11250:14;11236:12;11202:63;;;11115:156;11362:4;11355:5;11351:16;11345:23;11374:63;11431:4;11426:3;11422:14;11408:12;11374:63;;;11281:162;11535:4;11528:5;11524:16;11518:23;11547:63;11604:4;11599:3;11595:14;11581:12;11547:63;;;11453:163;11068:563;;;;11638:103;11711:24;11729:5;11711:24;;;11706:3;11699:37;11693:48;;;11748:113;11831:24;11849:5;11831:24;;;11826:3;11819:37;11813:48;;;11868:271;;12021:93;12110:3;12101:6;12021:93;;;12014:100;;12131:3;12124:10;;12002:137;;;;;12146:222;;12273:2;12262:9;12258:18;12250:26;;12287:71;12355:1;12344:9;12340:17;12331:6;12287:71;;;12244:124;;;;;12375:238;;12510:2;12499:9;12495:18;12487:26;;12524:79;12600:1;12589:9;12585:17;12576:6;12524:79;;;12481:132;;;;;12620:210;;12741:2;12730:9;12726:18;12718:26;;12755:65;12817:1;12806:9;12802:17;12793:6;12755:65;;;12712:118;;;;;12837:405;;13004:2;12993:9;12989:18;12981:26;;13054:9;13048:4;13044:20;13040:1;13029:9;13025:17;13018:47;13079:76;13150:4;13141:6;13079:76;;;13071:84;;13166:66;13228:2;13217:9;13213:18;13204:6;13166:66;;;12975:267;;;;;;13249:260;;13395:2;13384:9;13380:18;13372:26;;13409:90;13496:1;13485:9;13481:17;13472:6;13409:90;;;13366:143;;;;;13516:310;;13663:2;13652:9;13648:18;13640:26;;13713:9;13707:4;13703:20;13699:1;13688:9;13684:17;13677:47;13738:78;13811:4;13802:6;13738:78;;;13730:86;;13634:192;;;;;13833:416;;14033:2;14022:9;14018:18;14010:26;;14083:9;14077:4;14073:20;14069:1;14058:9;14054:17;14047:47;14108:131;14234:4;14108:131;;;14100:139;;14004:245;;;;14256:416;;14456:2;14445:9;14441:18;14433:26;;14506:9;14500:4;14496:20;14492:1;14481:9;14477:17;14470:47;14531:131;14657:4;14531:131;;;14523:139;;14427:245;;;;14679:416;;14879:2;14868:9;14864:18;14856:26;;14929:9;14923:4;14919:20;14915:1;14904:9;14900:17;14893:47;14954:131;15080:4;14954:131;;;14946:139;;14850:245;;;;15102:416;;15302:2;15291:9;15287:18;15279:26;;15352:9;15346:4;15342:20;15338:1;15327:9;15323:17;15316:47;15377:131;15503:4;15377:131;;;15369:139;;15273:245;;;;15525:416;;15725:2;15714:9;15710:18;15702:26;;15775:9;15769:4;15765:20;15761:1;15750:9;15746:17;15739:47;15800:131;15926:4;15800:131;;;15792:139;;15696:245;;;;15948:416;;16148:2;16137:9;16133:18;16125:26;;16198:9;16192:4;16188:20;16184:1;16173:9;16169:17;16162:47;16223:131;16349:4;16223:131;;;16215:139;;16119:245;;;;16371:416;;16571:2;16560:9;16556:18;16548:26;;16621:9;16615:4;16611:20;16607:1;16596:9;16592:17;16585:47;16646:131;16772:4;16646:131;;;16638:139;;16542:245;;;;16794:416;;16994:2;16983:9;16979:18;16971:26;;17044:9;17038:4;17034:20;17030:1;17019:9;17015:17;17008:47;17069:131;17195:4;17069:131;;;17061:139;;16965:245;;;;17217:416;;17417:2;17406:9;17402:18;17394:26;;17467:9;17461:4;17457:20;17453:1;17442:9;17438:17;17431:47;17492:131;17618:4;17492:131;;;17484:139;;17388:245;;;;17640:330;;17821:2;17810:9;17806:18;17798:26;;17835:125;17957:1;17946:9;17942:17;17933:6;17835:125;;;17792:178;;;;;17977:222;;18104:2;18093:9;18089:18;18081:26;;18118:71;18186:1;18175:9;18171:17;18162:6;18118:71;;;18075:124;;;;;18206:365;;18377:2;18366:9;18362:18;18354:26;;18391:71;18459:1;18448:9;18444:17;18435:6;18391:71;;;18473:88;18557:2;18546:9;18542:18;18533:6;18473:88;;;18348:223;;;;;;18578:324;;18728:11;18715:25;18824:1;18818:4;18814:12;18803:8;18787:14;18783:29;18779:48;18759:18;18755:73;18745:2;;18842:1;18839;18832:12;18745:2;18873:18;18863:8;18859:33;18851:41;;18683:219;;;;;;18909:321;;19054:11;19041:25;19152:1;19144:6;19140:14;19129:8;19113:14;19109:29;19105:50;19085:18;19081:75;19071:2;;19170:1;19167;19160:12;19071:2;19201:18;19191:8;19187:33;19179:41;;19009:221;;;;;;19237:121;;19330:5;19324:12;19314:22;;19295:63;;;;19365:122;;19459:5;19453:12;19443:22;;19424:63;;;;19495:162;;19609:6;19604:3;19597:19;19646:4;19641:3;19637:14;19622:29;;19590:67;;;;;19666:144;;19801:3;19786:18;;19779:31;;;;;19819:163;;19934:6;19929:3;19922:19;19971:4;19966:3;19962:14;19947:29;;19915:67;;;;;19990:91;;20052:24;20070:5;20052:24;;;20041:35;;20035:46;;;;20088:99;;20158:24;20176:5;20158:24;;;20147:35;;20141:46;;;;20194:85;;20267:5;20260:13;20253:21;20242:32;;20236:43;;;;20286:110;;20367:24;20385:5;20367:24;;;20356:35;;20350:46;;;;20403:109;;20483:24;20501:5;20483:24;;;20472:35;;20466:46;;;;20519:121;;20592:42;20585:5;20581:54;20570:65;;20564:76;;;;20647:72;;20709:5;20698:16;;20692:27;;;;20726:129;;20813:37;20844:5;20813:37;;;20800:50;;20794:61;;;;20862:159;;20960:56;21010:5;20960:56;;;20947:69;;20941:80;;;;21028:127;;21126:24;21144:5;21126:24;;;21113:37;;21107:48;;;;21162:121;;21241:37;21272:5;21241:37;;;21228:50;;21222:61;;;;21290:108;;21369:24;21387:5;21369:24;;;21356:37;;21350:48;;;;21406:268;21471:1;21478:101;21492:6;21489:1;21486:13;21478:101;;;21568:1;21563:3;21559:11;21553:18;21549:1;21544:3;21540:11;21533:39;21514:2;21511:1;21507:10;21502:15;;21478:101;;;21594:6;21591:1;21588:13;21585:2;;;21659:1;21650:6;21645:3;21641:16;21634:27;21585:2;21455:219;;;;;21682:97;;21770:2;21766:7;21761:2;21754:5;21750:14;21746:28;21736:38;;21730:49;;;;21787:117;21856:24;21874:5;21856:24;;;21849:5;21846:35;21836:2;;21895:1;21892;21885:12;21836:2;21830:74;;21911:133;21988:32;22014:5;21988:32;;;21981:5;21978:43;21968:2;;22035:1;22032;22025:12;21968:2;21962:82;;22051:111;22117:21;22132:5;22117:21;;;22110:5;22107:32;22097:2;;22153:1;22150;22143:12;22097:2;22091:71;;22169:155;22257:43;22294:5;22257:43;;;22250:5;22247:54;22237:2;;22315:1;22312;22305:12;22237:2;22231:93;;22331:153;22418:42;22454:5;22418:42;;;22411:5;22408:53;22398:2;;22475:1;22472;22465:12;22398:2;22392:92;;22491:117;22560:24;22578:5;22560:24;;;22553:5;22550:35;22540:2;;22599:1;22596;22589:12;22540:2;22534:74;",
  "source": "//SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.10;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"./AcceptEverythingPaymaster.sol\";\r\n\r\n///a sample paymaster that has whitelists for senders and targets.\r\n/// - if at least one sender is whitelisted, then ONLY whitelisted senders are allowed.\r\n/// - if at least one target is whitelisted, then ONLY whitelisted targets are allowed.\r\ncontract WhitelistPaymaster is AcceptEverythingPaymaster {\r\n\r\n    bool public useSenderWhitelist;\r\n    bool public useTargetWhitelist;\r\n    mapping (address=>bool) public senderWhitelist;\r\n    mapping (address=>bool) public targetWhitelist;\r\n\r\n    function whitelistSender(address sender) public onlyOwner {\r\n        senderWhitelist[sender]=true;\r\n        useSenderWhitelist = true;\r\n    }\r\n    function whitelistTarget(address target) public onlyOwner {\r\n        targetWhitelist[target]=true;\r\n        useTargetWhitelist = true;\r\n    }\r\n\r\n    function preRelayedCall(\r\n        GsnTypes.RelayRequest calldata relayRequest,\r\n        bytes calldata signature,\r\n        bytes calldata approvalData,\r\n        uint256 maxPossibleGas\r\n    )\r\n    external\r\n    override\r\n    virtual\r\n    returns (bytes memory context, bool revertOnRecipientRevert) {\r\n        (relayRequest, signature, approvalData, maxPossibleGas);\r\n\r\n        if ( useSenderWhitelist ) {\r\n            require( senderWhitelist[relayRequest.request.from], \"sender not whitelisted\");\r\n        }\r\n        if ( useTargetWhitelist ) {\r\n            require( targetWhitelist[relayRequest.request.to], \"target not whitelisted\");\r\n        }\r\n        return (\"\", false);\r\n    }\r\n}",
  "sourcePath": "C:/Dev/repos/gsn-demo/contracts/WhitelistPaymaster.sol",
  "ast": {
    "absolutePath": "/C/Dev/repos/gsn-demo/contracts/WhitelistPaymaster.sol",
    "exportedSymbols": {
      "WhitelistPaymaster": [
        325
      ]
    },
    "id": 326,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 220,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:4"
      },
      {
        "id": 221,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:33:4"
      },
      {
        "absolutePath": "/C/Dev/repos/gsn-demo/contracts/AcceptEverythingPaymaster.sol",
        "file": "./AcceptEverythingPaymaster.sol",
        "id": 222,
        "nodeType": "ImportDirective",
        "scope": 326,
        "sourceUnit": 62,
        "src": "95:41:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 224,
              "name": "AcceptEverythingPaymaster",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 61,
              "src": "417:25:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AcceptEverythingPaymaster_$61",
                "typeString": "contract AcceptEverythingPaymaster"
              }
            },
            "id": 225,
            "nodeType": "InheritanceSpecifier",
            "src": "417:25:4"
          }
        ],
        "contractDependencies": [
          61,
          509,
          3636,
          5452,
          5946
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 223,
          "nodeType": "StructuredDocumentation",
          "src": "140:246:4",
          "text": "a sample paymaster that has whitelists for senders and targets.\n - if at least one sender is whitelisted, then ONLY whitelisted senders are allowed.\n - if at least one target is whitelisted, then ONLY whitelisted targets are allowed."
        },
        "fullyImplemented": true,
        "id": 325,
        "linearizedBaseContracts": [
          325,
          61,
          509,
          5452,
          5946,
          3636
        ],
        "name": "WhitelistPaymaster",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "dd1bcaa1",
            "id": 227,
            "mutability": "mutable",
            "name": "useSenderWhitelist",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 325,
            "src": "452:30:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 226,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "452:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4f28bfb9",
            "id": 229,
            "mutability": "mutable",
            "name": "useTargetWhitelist",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 325,
            "src": "489:30:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 228,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "489:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8222f07d",
            "id": 233,
            "mutability": "mutable",
            "name": "senderWhitelist",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 325,
            "src": "526:46:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 232,
              "keyType": {
                "id": 230,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "535:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "526:23:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 231,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "544:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "858437b0",
            "id": 237,
            "mutability": "mutable",
            "name": "targetWhitelist",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 325,
            "src": "579:46:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 236,
              "keyType": {
                "id": 234,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "588:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "579:23:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 235,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "597:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 254,
              "nodeType": "Block",
              "src": "692:83:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 244,
                        "name": "senderWhitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 233,
                        "src": "703:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 246,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 245,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 239,
                        "src": "719:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "703:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "727:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "703:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 249,
                  "nodeType": "ExpressionStatement",
                  "src": "703:28:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 250,
                      "name": "useSenderWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "742:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "763:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "742:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "742:25:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2f10a6c6",
            "id": 255,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 242,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 241,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5401,
                  "src": "682:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "682:9:4"
              }
            ],
            "name": "whitelistSender",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 239,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 255,
                  "src": "659:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 238,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "658:16:4"
            },
            "returnParameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "692:0:4"
            },
            "scope": 325,
            "src": "634:141:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 272,
              "nodeType": "Block",
              "src": "839:83:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 262,
                        "name": "targetWhitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 237,
                        "src": "850:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 264,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 263,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "866:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "850:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "874:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "850:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "850:28:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 268,
                      "name": "useTargetWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "889:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "910:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "889:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "889:25:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1cfda9fa",
            "id": 273,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 260,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 259,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5401,
                  "src": "829:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "829:9:4"
              }
            ],
            "name": "whitelistTarget",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 273,
                  "src": "806:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "806:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "805:16:4"
            },
            "returnParameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:0:4"
            },
            "scope": 325,
            "src": "781:141:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              41
            ],
            "body": {
              "id": 323,
              "nodeType": "Block",
              "src": "1228:385:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 289,
                        "name": "relayRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "1240:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RelayRequest_$3558_calldata_ptr",
                          "typeString": "struct GsnTypes.RelayRequest calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 290,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "1254:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 291,
                        "name": "approvalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "1265:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 292,
                        "name": "maxPossibleGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "1279:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 293,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1239:55:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_RelayRequest_$3558_calldata_ptr_$_t_bytes_calldata_ptr_$_t_bytes_calldata_ptr_$_t_uint256_$",
                      "typeString": "tuple(struct GsnTypes.RelayRequest calldata,bytes calldata,bytes calldata,uint256)"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "1239:55:4"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 295,
                    "name": "useSenderWhitelist",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 227,
                    "src": "1312:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 306,
                  "nodeType": "IfStatement",
                  "src": "1307:131:4",
                  "trueBody": {
                    "id": 305,
                    "nodeType": "Block",
                    "src": "1333:105:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 297,
                                "name": "senderWhitelist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 233,
                                "src": "1357:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 301,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 298,
                                    "name": "relayRequest",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 275,
                                    "src": "1373:12:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RelayRequest_$3558_calldata_ptr",
                                      "typeString": "struct GsnTypes.RelayRequest calldata"
                                    }
                                  },
                                  "id": 299,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "request",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3555,
                                  "src": "1373:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ForwardRequest_$3276_calldata_ptr",
                                    "typeString": "struct IForwarder.ForwardRequest calldata"
                                  }
                                },
                                "id": 300,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "from",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3265,
                                "src": "1373:25:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1357:42:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "73656e646572206e6f742077686974656c6973746564",
                              "id": 302,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1401:24:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e2c1867c7a7169848f7afd303de5603a0c807d938979b5d9c6964a60c4386eb8",
                                "typeString": "literal_string \"sender not whitelisted\""
                              },
                              "value": "sender not whitelisted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e2c1867c7a7169848f7afd303de5603a0c807d938979b5d9c6964a60c4386eb8",
                                "typeString": "literal_string \"sender not whitelisted\""
                              }
                            ],
                            "id": 296,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1348:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1348:78:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 304,
                        "nodeType": "ExpressionStatement",
                        "src": "1348:78:4"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 307,
                    "name": "useTargetWhitelist",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 229,
                    "src": "1453:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 318,
                  "nodeType": "IfStatement",
                  "src": "1448:129:4",
                  "trueBody": {
                    "id": 317,
                    "nodeType": "Block",
                    "src": "1474:103:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 309,
                                "name": "targetWhitelist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 237,
                                "src": "1498:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 313,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 310,
                                    "name": "relayRequest",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 275,
                                    "src": "1514:12:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RelayRequest_$3558_calldata_ptr",
                                      "typeString": "struct GsnTypes.RelayRequest calldata"
                                    }
                                  },
                                  "id": 311,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "request",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3555,
                                  "src": "1514:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ForwardRequest_$3276_calldata_ptr",
                                    "typeString": "struct IForwarder.ForwardRequest calldata"
                                  }
                                },
                                "id": 312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "to",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3267,
                                "src": "1514:23:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1498:40:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "746172676574206e6f742077686974656c6973746564",
                              "id": 314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1540:24:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_033d36364bde6cb8bbf6777680999d20f88931a816a90ceb423209d9073b7882",
                                "typeString": "literal_string \"target not whitelisted\""
                              },
                              "value": "target not whitelisted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_033d36364bde6cb8bbf6777680999d20f88931a816a90ceb423209d9073b7882",
                                "typeString": "literal_string \"target not whitelisted\""
                              }
                            ],
                            "id": 308,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1489:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1489:76:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 316,
                        "nodeType": "ExpressionStatement",
                        "src": "1489:76:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1595:2:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1599:5:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "id": 321,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1594:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_bool_$",
                      "typeString": "tuple(literal_string \"\",bool)"
                    }
                  },
                  "functionReturnParameters": 288,
                  "id": 322,
                  "nodeType": "Return",
                  "src": "1587:18:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e5c12446",
            "id": 324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "preRelayedCall",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 283,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1140:8:4"
            },
            "parameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "relayRequest",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 324,
                  "src": "964:43:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RelayRequest_$3558_calldata_ptr",
                    "typeString": "struct GsnTypes.RelayRequest"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 274,
                    "name": "GsnTypes.RelayRequest",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3558,
                    "src": "964:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RelayRequest_$3558_storage_ptr",
                      "typeString": "struct GsnTypes.RelayRequest"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 324,
                  "src": "1018:24:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 279,
                  "mutability": "mutable",
                  "name": "approvalData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 324,
                  "src": "1053:27:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1053:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "maxPossibleGas",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 324,
                  "src": "1091:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1091:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "953:167:4"
            },
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 285,
                  "mutability": "mutable",
                  "name": "context",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 324,
                  "src": "1176:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 284,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1176:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 287,
                  "mutability": "mutable",
                  "name": "revertOnRecipientRevert",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 324,
                  "src": "1198:28:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1198:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1175:52:4"
            },
            "scope": 325,
            "src": "930:683:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 326,
        "src": "386:1230:4"
      }
    ],
    "src": "32:1584:4"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Dev/repos/gsn-demo/contracts/WhitelistPaymaster.sol",
      "exportedSymbols": {
        "WhitelistPaymaster": [
          325
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.6",
            ".10"
          ]
        },
        "id": 220,
        "name": "PragmaDirective",
        "src": "32:24:4"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 221,
        "name": "PragmaDirective",
        "src": "58:33:4"
      },
      {
        "attributes": {
          "SourceUnit": 62,
          "absolutePath": "/C/Dev/repos/gsn-demo/contracts/AcceptEverythingPaymaster.sol",
          "file": "./AcceptEverythingPaymaster.sol",
          "scope": 326,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 222,
        "name": "ImportDirective",
        "src": "95:41:4"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            61,
            509,
            3636,
            5452,
            5946
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            325,
            61,
            509,
            5452,
            5946,
            3636
          ],
          "name": "WhitelistPaymaster",
          "scope": 326
        },
        "children": [
          {
            "attributes": {
              "text": "a sample paymaster that has whitelists for senders and targets.\n - if at least one sender is whitelisted, then ONLY whitelisted senders are allowed.\n - if at least one target is whitelisted, then ONLY whitelisted targets are allowed."
            },
            "id": 223,
            "name": "StructuredDocumentation",
            "src": "140:246:4"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "AcceptEverythingPaymaster",
                  "referencedDeclaration": 61,
                  "type": "contract AcceptEverythingPaymaster"
                },
                "id": 224,
                "name": "UserDefinedTypeName",
                "src": "417:25:4"
              }
            ],
            "id": 225,
            "name": "InheritanceSpecifier",
            "src": "417:25:4"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "dd1bcaa1",
              "mutability": "mutable",
              "name": "useSenderWhitelist",
              "overrides": null,
              "scope": 325,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bool",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "bool",
                  "type": "bool"
                },
                "id": 226,
                "name": "ElementaryTypeName",
                "src": "452:4:4"
              }
            ],
            "id": 227,
            "name": "VariableDeclaration",
            "src": "452:30:4"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "4f28bfb9",
              "mutability": "mutable",
              "name": "useTargetWhitelist",
              "overrides": null,
              "scope": 325,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bool",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "bool",
                  "type": "bool"
                },
                "id": 228,
                "name": "ElementaryTypeName",
                "src": "489:4:4"
              }
            ],
            "id": 229,
            "name": "VariableDeclaration",
            "src": "489:30:4"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "8222f07d",
              "mutability": "mutable",
              "name": "senderWhitelist",
              "overrides": null,
              "scope": 325,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => bool)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 230,
                    "name": "ElementaryTypeName",
                    "src": "535:7:4"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 231,
                    "name": "ElementaryTypeName",
                    "src": "544:4:4"
                  }
                ],
                "id": 232,
                "name": "Mapping",
                "src": "526:23:4"
              }
            ],
            "id": 233,
            "name": "VariableDeclaration",
            "src": "526:46:4"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "858437b0",
              "mutability": "mutable",
              "name": "targetWhitelist",
              "overrides": null,
              "scope": 325,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => bool)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 234,
                    "name": "ElementaryTypeName",
                    "src": "588:7:4"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 235,
                    "name": "ElementaryTypeName",
                    "src": "597:4:4"
                  }
                ],
                "id": 236,
                "name": "Mapping",
                "src": "579:23:4"
              }
            ],
            "id": 237,
            "name": "VariableDeclaration",
            "src": "579:46:4"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "2f10a6c6",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "whitelistSender",
              "overrides": null,
              "scope": 325,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "sender",
                      "overrides": null,
                      "scope": 255,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 238,
                        "name": "ElementaryTypeName",
                        "src": "659:7:4"
                      }
                    ],
                    "id": 239,
                    "name": "VariableDeclaration",
                    "src": "659:14:4"
                  }
                ],
                "id": 240,
                "name": "ParameterList",
                "src": "658:16:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 243,
                "name": "ParameterList",
                "src": "692:0:4"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5401,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 241,
                    "name": "Identifier",
                    "src": "682:9:4"
                  }
                ],
                "id": 242,
                "name": "ModifierInvocation",
                "src": "682:9:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 233,
                                  "type": "mapping(address => bool)",
                                  "value": "senderWhitelist"
                                },
                                "id": 244,
                                "name": "Identifier",
                                "src": "703:15:4"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 239,
                                  "type": "address",
                                  "value": "sender"
                                },
                                "id": 245,
                                "name": "Identifier",
                                "src": "719:6:4"
                              }
                            ],
                            "id": 246,
                            "name": "IndexAccess",
                            "src": "703:23:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 247,
                            "name": "Literal",
                            "src": "727:4:4"
                          }
                        ],
                        "id": 248,
                        "name": "Assignment",
                        "src": "703:28:4"
                      }
                    ],
                    "id": 249,
                    "name": "ExpressionStatement",
                    "src": "703:28:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 227,
                              "type": "bool",
                              "value": "useSenderWhitelist"
                            },
                            "id": 250,
                            "name": "Identifier",
                            "src": "742:18:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 251,
                            "name": "Literal",
                            "src": "763:4:4"
                          }
                        ],
                        "id": 252,
                        "name": "Assignment",
                        "src": "742:25:4"
                      }
                    ],
                    "id": 253,
                    "name": "ExpressionStatement",
                    "src": "742:25:4"
                  }
                ],
                "id": 254,
                "name": "Block",
                "src": "692:83:4"
              }
            ],
            "id": 255,
            "name": "FunctionDefinition",
            "src": "634:141:4"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "1cfda9fa",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "whitelistTarget",
              "overrides": null,
              "scope": 325,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "target",
                      "overrides": null,
                      "scope": 273,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 256,
                        "name": "ElementaryTypeName",
                        "src": "806:7:4"
                      }
                    ],
                    "id": 257,
                    "name": "VariableDeclaration",
                    "src": "806:14:4"
                  }
                ],
                "id": 258,
                "name": "ParameterList",
                "src": "805:16:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 261,
                "name": "ParameterList",
                "src": "839:0:4"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5401,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 259,
                    "name": "Identifier",
                    "src": "829:9:4"
                  }
                ],
                "id": 260,
                "name": "ModifierInvocation",
                "src": "829:9:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 237,
                                  "type": "mapping(address => bool)",
                                  "value": "targetWhitelist"
                                },
                                "id": 262,
                                "name": "Identifier",
                                "src": "850:15:4"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 257,
                                  "type": "address",
                                  "value": "target"
                                },
                                "id": 263,
                                "name": "Identifier",
                                "src": "866:6:4"
                              }
                            ],
                            "id": 264,
                            "name": "IndexAccess",
                            "src": "850:23:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 265,
                            "name": "Literal",
                            "src": "874:4:4"
                          }
                        ],
                        "id": 266,
                        "name": "Assignment",
                        "src": "850:28:4"
                      }
                    ],
                    "id": 267,
                    "name": "ExpressionStatement",
                    "src": "850:28:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 229,
                              "type": "bool",
                              "value": "useTargetWhitelist"
                            },
                            "id": 268,
                            "name": "Identifier",
                            "src": "889:18:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 269,
                            "name": "Literal",
                            "src": "910:4:4"
                          }
                        ],
                        "id": 270,
                        "name": "Assignment",
                        "src": "889:25:4"
                      }
                    ],
                    "id": 271,
                    "name": "ExpressionStatement",
                    "src": "889:25:4"
                  }
                ],
                "id": 272,
                "name": "Block",
                "src": "839:83:4"
              }
            ],
            "id": 273,
            "name": "FunctionDefinition",
            "src": "781:141:4"
          },
          {
            "attributes": {
              "baseFunctions": [
                41
              ],
              "documentation": null,
              "functionSelector": "e5c12446",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "preRelayedCall",
              "scope": 325,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 283,
                "name": "OverrideSpecifier",
                "src": "1140:8:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "relayRequest",
                      "overrides": null,
                      "scope": 324,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "struct GsnTypes.RelayRequest",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "GsnTypes.RelayRequest",
                          "referencedDeclaration": 3558,
                          "type": "struct GsnTypes.RelayRequest"
                        },
                        "id": 274,
                        "name": "UserDefinedTypeName",
                        "src": "964:21:4"
                      }
                    ],
                    "id": 275,
                    "name": "VariableDeclaration",
                    "src": "964:43:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "signature",
                      "overrides": null,
                      "scope": 324,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 276,
                        "name": "ElementaryTypeName",
                        "src": "1018:5:4"
                      }
                    ],
                    "id": 277,
                    "name": "VariableDeclaration",
                    "src": "1018:24:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "approvalData",
                      "overrides": null,
                      "scope": 324,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 278,
                        "name": "ElementaryTypeName",
                        "src": "1053:5:4"
                      }
                    ],
                    "id": 279,
                    "name": "VariableDeclaration",
                    "src": "1053:27:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "maxPossibleGas",
                      "overrides": null,
                      "scope": 324,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 280,
                        "name": "ElementaryTypeName",
                        "src": "1091:7:4"
                      }
                    ],
                    "id": 281,
                    "name": "VariableDeclaration",
                    "src": "1091:22:4"
                  }
                ],
                "id": 282,
                "name": "ParameterList",
                "src": "953:167:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "context",
                      "overrides": null,
                      "scope": 324,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 284,
                        "name": "ElementaryTypeName",
                        "src": "1176:5:4"
                      }
                    ],
                    "id": 285,
                    "name": "VariableDeclaration",
                    "src": "1176:20:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "revertOnRecipientRevert",
                      "overrides": null,
                      "scope": 324,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 286,
                        "name": "ElementaryTypeName",
                        "src": "1198:4:4"
                      }
                    ],
                    "id": 287,
                    "name": "VariableDeclaration",
                    "src": "1198:28:4"
                  }
                ],
                "id": 288,
                "name": "ParameterList",
                "src": "1175:52:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(struct GsnTypes.RelayRequest calldata,bytes calldata,bytes calldata,uint256)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 275,
                              "type": "struct GsnTypes.RelayRequest calldata",
                              "value": "relayRequest"
                            },
                            "id": 289,
                            "name": "Identifier",
                            "src": "1240:12:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 277,
                              "type": "bytes calldata",
                              "value": "signature"
                            },
                            "id": 290,
                            "name": "Identifier",
                            "src": "1254:9:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 279,
                              "type": "bytes calldata",
                              "value": "approvalData"
                            },
                            "id": 291,
                            "name": "Identifier",
                            "src": "1265:12:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 281,
                              "type": "uint256",
                              "value": "maxPossibleGas"
                            },
                            "id": 292,
                            "name": "Identifier",
                            "src": "1279:14:4"
                          }
                        ],
                        "id": 293,
                        "name": "TupleExpression",
                        "src": "1239:55:4"
                      }
                    ],
                    "id": 294,
                    "name": "ExpressionStatement",
                    "src": "1239:55:4"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 227,
                          "type": "bool",
                          "value": "useSenderWhitelist"
                        },
                        "id": 295,
                        "name": "Identifier",
                        "src": "1312:18:4"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_e2c1867c7a7169848f7afd303de5603a0c807d938979b5d9c6964a60c4386eb8",
                                          "typeString": "literal_string \"sender not whitelisted\""
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        -18,
                                        -18
                                      ],
                                      "referencedDeclaration": -18,
                                      "type": "function (bool,string memory) pure",
                                      "value": "require"
                                    },
                                    "id": 296,
                                    "name": "Identifier",
                                    "src": "1348:7:4"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 233,
                                          "type": "mapping(address => bool)",
                                          "value": "senderWhitelist"
                                        },
                                        "id": 297,
                                        "name": "Identifier",
                                        "src": "1357:15:4"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "from",
                                          "referencedDeclaration": 3265,
                                          "type": "address"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "request",
                                              "referencedDeclaration": 3555,
                                              "type": "struct IForwarder.ForwardRequest calldata"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 275,
                                                  "type": "struct GsnTypes.RelayRequest calldata",
                                                  "value": "relayRequest"
                                                },
                                                "id": 298,
                                                "name": "Identifier",
                                                "src": "1373:12:4"
                                              }
                                            ],
                                            "id": 299,
                                            "name": "MemberAccess",
                                            "src": "1373:20:4"
                                          }
                                        ],
                                        "id": 300,
                                        "name": "MemberAccess",
                                        "src": "1373:25:4"
                                      }
                                    ],
                                    "id": 301,
                                    "name": "IndexAccess",
                                    "src": "1357:42:4"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "73656e646572206e6f742077686974656c6973746564",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"sender not whitelisted\"",
                                      "value": "sender not whitelisted"
                                    },
                                    "id": 302,
                                    "name": "Literal",
                                    "src": "1401:24:4"
                                  }
                                ],
                                "id": 303,
                                "name": "FunctionCall",
                                "src": "1348:78:4"
                              }
                            ],
                            "id": 304,
                            "name": "ExpressionStatement",
                            "src": "1348:78:4"
                          }
                        ],
                        "id": 305,
                        "name": "Block",
                        "src": "1333:105:4"
                      }
                    ],
                    "id": 306,
                    "name": "IfStatement",
                    "src": "1307:131:4"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 229,
                          "type": "bool",
                          "value": "useTargetWhitelist"
                        },
                        "id": 307,
                        "name": "Identifier",
                        "src": "1453:18:4"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_033d36364bde6cb8bbf6777680999d20f88931a816a90ceb423209d9073b7882",
                                          "typeString": "literal_string \"target not whitelisted\""
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        -18,
                                        -18
                                      ],
                                      "referencedDeclaration": -18,
                                      "type": "function (bool,string memory) pure",
                                      "value": "require"
                                    },
                                    "id": 308,
                                    "name": "Identifier",
                                    "src": "1489:7:4"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 237,
                                          "type": "mapping(address => bool)",
                                          "value": "targetWhitelist"
                                        },
                                        "id": 309,
                                        "name": "Identifier",
                                        "src": "1498:15:4"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "to",
                                          "referencedDeclaration": 3267,
                                          "type": "address"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "request",
                                              "referencedDeclaration": 3555,
                                              "type": "struct IForwarder.ForwardRequest calldata"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 275,
                                                  "type": "struct GsnTypes.RelayRequest calldata",
                                                  "value": "relayRequest"
                                                },
                                                "id": 310,
                                                "name": "Identifier",
                                                "src": "1514:12:4"
                                              }
                                            ],
                                            "id": 311,
                                            "name": "MemberAccess",
                                            "src": "1514:20:4"
                                          }
                                        ],
                                        "id": 312,
                                        "name": "MemberAccess",
                                        "src": "1514:23:4"
                                      }
                                    ],
                                    "id": 313,
                                    "name": "IndexAccess",
                                    "src": "1498:40:4"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "746172676574206e6f742077686974656c6973746564",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"target not whitelisted\"",
                                      "value": "target not whitelisted"
                                    },
                                    "id": 314,
                                    "name": "Literal",
                                    "src": "1540:24:4"
                                  }
                                ],
                                "id": 315,
                                "name": "FunctionCall",
                                "src": "1489:76:4"
                              }
                            ],
                            "id": 316,
                            "name": "ExpressionStatement",
                            "src": "1489:76:4"
                          }
                        ],
                        "id": 317,
                        "name": "Block",
                        "src": "1474:103:4"
                      }
                    ],
                    "id": 318,
                    "name": "IfStatement",
                    "src": "1448:129:4"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 288
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "type": "tuple(literal_string \"\",bool)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"\"",
                              "value": ""
                            },
                            "id": 319,
                            "name": "Literal",
                            "src": "1595:2:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "66616c7365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "false"
                            },
                            "id": 320,
                            "name": "Literal",
                            "src": "1599:5:4"
                          }
                        ],
                        "id": 321,
                        "name": "TupleExpression",
                        "src": "1594:11:4"
                      }
                    ],
                    "id": 322,
                    "name": "Return",
                    "src": "1587:18:4"
                  }
                ],
                "id": 323,
                "name": "Block",
                "src": "1228:385:4"
              }
            ],
            "id": 324,
            "name": "FunctionDefinition",
            "src": "930:683:4"
          }
        ],
        "id": 325,
        "name": "ContractDefinition",
        "src": "386:1230:4"
      }
    ],
    "id": 326,
    "name": "SourceUnit",
    "src": "32:1584:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.10+commit.00c0fcaf.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-02-23T12:49:21.125Z",
  "devdoc": {
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "getRelayHubDeposit()": {
        "notice": "check current deposit on relay hub."
      },
      "withdrawRelayHubDepositTo(uint256,address)": {
        "notice": "withdraw deposit from relayHub"
      }
    },
    "notice": "a sample paymaster that has whitelists for senders and targets. - if at least one sender is whitelisted, then ONLY whitelisted senders are allowed. - if at least one target is whitelisted, then ONLY whitelisted targets are allowed."
  }
}